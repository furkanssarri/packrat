<div class="container py-4">
  <!-- Breadcrumb Navigation -->
  <% if (typeof currentFolder !=='undefined' && currentFolder) { %>
    <nav aria-label="breadcrumb" class="mb-4">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">My Drive</a></li>

        <% let ancestor=parentFolder; %>
          <% while (ancestor) { %>
            <li class="breadcrumb-item">
              <a href="/folders/<%= ancestor.id %>">
                <%= ancestor.name %>
              </a>
            </li>
            <% ancestor=ancestor.parent; %>
              <% } %>

                <li class="breadcrumb-item active" aria-current="page">
                  <%= currentFolder.name %>
                </li>
      </ol>
    </nav>
    <% } else { %>
      <h1 class="mb-4">My Drive</h1>
      <% } %>

        <!-- Upload Form -->
        <form action="/upload" method="POST" enctype="multipart/form-data"
          class="d-flex flex-column flex-sm-row align-items-stretch align-items-sm-center gap-2 mb-4">
          <input type="file" name="file" class="form-control" required style="max-width: 250px;">
          <% if (currentFolder) { %>
            <input type="hidden" name="parentId" value="<%= currentFolder.id %>">
            <% } %>
              <button type="submit" class="btn btn-primary">
                <i class="bi bi-cloud-upload"></i> Upload
              </button>
        </form>

        <div class="d-flex flex-column flex-sm-row align-items-stretch align-items-sm-center gap-3 mb-4">
          <!-- New Folder Form -->
          <div>
            <h6 class="fw-semibold mb-2">
              <%= currentFolder ? 'Add Subfolder' : 'Create New Folder' %>
            </h6>
            <%- include('folders/_form', { parentId: currentFolder ? currentFolder.id : null }) %>
          </div>
        </div>

        <!-- Toolbar: Sort + View Toggle -->
        <div
          class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4 gap-3">
          <div class="d-flex align-items-center gap-3">
            <h4 class="fw-semibold mb-0"><i class="bi bi-folder"></i> My Files</h4>
          </div>

          <div class="d-flex align-items-center gap-2">
            <div class="dropdown me-2">
              <% const sortLabels={ 'newest' : 'Newest first' , 'oldest' : 'Oldest first' , 'size-desc'
                : 'Largest first' , 'size-asc' : 'Smallest first' , 'type' : 'File type' , 'name' : 'Name (Aâ€“Z)' }; %>
                <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown"
                  data-bs-toggle="dropdown">
                  <%= sortLabels[sort] || 'Sort by' %>
                </button>
                <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                  <% Object.keys(sortLabels).forEach(key=> { %>
                    <li><a class="dropdown-item <%= sort === key ? 'active' : '' %>" href="?sort=<%= key %>">
                        <%= sortLabels[key] %>
                      </a></li>
                    <% }) %>
                </ul>
            </div>

            <!-- View Toggle Buttons -->
            <div class="btn-group" role="group" aria-label="View Toggle">
              <button id="gridViewBtn" class="btn btn-outline-primary active" title="Grid view">
                <i class="bi bi-grid"></i>
              </button>
              <button id="listViewBtn" class="btn btn-outline-primary" title="List view">
                <i class="bi bi-list"></i>
              </button>
            </div>
          </div>
        </div>

        <!-- Main Folder/File Container -->
        <div id="fileContainer" class="grid-view">
          <!-- Folders Section -->
          <% if (folders && folders.length> 0) { %>
            <div class="row g-3 mb-4">
              <% folders.forEach(folder=> { %>
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                  <div class="card h-100 folder-card text-center position-relative">
                    <a href="/folders/<%= folder.id %>" class="text-decoration-none text-reset">
                      <div class="card-body d-flex flex-column justify-content-center align-items-center">
                        <div class="folder-icon display-3 mb-2 text-warning">
                          <i class="bi bi-folder-fill"></i>
                        </div>
                        <h6 class="card-title text-truncate mb-1">
                          <%= folder.name %>
                        </h6>
                        <p class="card-text text-muted small">
                          Created on <%= new Date(folder.createdAt).toLocaleDateString() %>
                        </p>
                      </div>
                    </a>
                    <form action="/folders/<%= folder.id %>/delete" method="POST"
                      class="position-absolute top-0 end-0 m-2">
                      <button class="btn btn-sm btn-outline-danger" title="Delete Folder">
                        <i class="bi bi-trash"></i>
                      </button>
                    </form>
                  </div>
                </div>
                <% }) %>
            </div>
            <% } %>

              <!-- Divider -->
              <% if (folders && folders.length> 0 && files && files.length > 0) { %>
                <hr class="my-4">
                <% } %>

                  <!-- Files Section -->
                  <% if (files && files.length> 0) { %>
                    <div class="row g-3">
                      <% files.forEach(file=> { %>
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3 file-item m-0">
                          <div class="card file-card" data-id="<%= file.id %>" data-file-url="<%= file.url %>"
                            data-file-type="<%= file.type %>" data-original-name="<%= file.name %>"
                            data-storage-name="<%= file.storageName %>">

                            <div class="file-preview-wrapper position-relative">
                              <% if (file.type?.startsWith('image/')) { %>
                                <img src="<%= file.url %>" alt="<%= file.name %>" class="file-thumb">
                                <% } else if (file.type==='application/pdf' ) { %>
                                  <div class="file-icon"><i class="bi bi-file-earmark-pdf"></i></div>
                                  <% } else { %>
                                    <div class="file-icon"><i class="bi bi-file-earmark"></i></div>
                                    <% } %>
                            </div>

                            <div class="card-body d-flex flex-column gap-1">
                              <h6 class="card-title text-truncate mb-1" title="<%= file.name %>">
                                <%= file.name %>
                              </h6>
                              <span class="card-text text-muted small mb-0">
                                <%= (file.size / 1024).toFixed(1) %> KB
                              </span>
                              <span class="card-text text-muted small">
                                Uploaded on <%= new Date(file.createdAt).toLocaleString() %>
                              </span>

                              <!-- Edit/Delete buttons -->
                              <div class="d-flex justify-content-end gap-2 mt-2">
                                <!-- Edit Form -->
                                <form action="/files/<%= file.id %>/edit" method="POST" class="m-0 p-0">
                                  <button type="submit" class="btn btn-sm btn-outline-secondary" title="Edit File">
                                    <i class="bi bi-pencil"></i>
                                  </button>
                                </form>

                                <!-- Delete Form -->
                                <form action="/files/<%= file.id %>/delete" method="POST" class="m-0 p-0">
                                  <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete File">
                                    <i class="bi bi-trash"></i>
                                  </button>
                                </form>
                              </div>

                            </div>
                          </div>
                        </div>
                        <% }) %>
                    </div>
                    <% } else { %>
                      <p class="text-muted">This folder is empty.</p>
                      <% } %>
        </div>
</div>

<!-- File Preview Modal -->
<div id="filePreviewModal" class="modal fade" tabindex="-1">
  <div class="modal-dialog modal-xl modal-dialog-centered">
    <div class="modal-content bg-dark text-white">
      <div class="modal-header border-0">
        <h5 class="modal-title">File Preview</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body text-center">
        <img id="previewImage" class="img-fluid d-none" />
        <iframe id="previewFrame" class="w-100" style="height:80vh;" hidden></iframe>
      </div>
    </div>
  </div>
</div>

<!-- File Rename Modal -->
<div class="modal fade" id="renameFileModal" tabindex="-1" aria-labelledby="renameFileModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content bg-dark text-white">
      <div class="modal-header border-0">
        <h5 class="modal-title" id="renameFileModalLabel">Rename File</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <form id="renameFileForm" method="POST">
        <div class="modal-body">
          <div class="mb-3">
            <label for="renameInput" class="form-label">New File Name</label>
            <input type="text" class="form-control" id="renameInput" name="renameInput" required>
          </div>
        </div>
        <div class="modal-footer border-0">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Rename</button>
        </div>
      </form>
    </div>
  </div>
</div>


<!-- View + Sort Scripts -->
<script>
  // Modal preview for all file types from Supabase
  document.querySelectorAll('.file-card').forEach(card => {
    card.addEventListener('click', () => {
      const fileUrl = card.dataset.fileUrl;
      const fileName = card.dataset.filename;
      const fileType = card.dataset.fileType || '';

      const imgEl = document.getElementById('previewImage');
      const frameEl = document.getElementById('previewFrame');

      // Reset previous preview
      imgEl.classList.add('d-none');
      frameEl.hidden = true;
      frameEl.src = '';

      // Image preview
      if (/\.(jpg|jpeg|png|gif|webp|svg)$/i.test(fileName) || fileType.startsWith('image/')) {
        imgEl.src = fileUrl;
        imgEl.classList.remove('d-none');
      }
      // PDF preview
      else if (fileType === 'application/pdf' || /\.pdf$/i.test(fileName)) {
        frameEl.src = fileUrl;
        frameEl.hidden = false;
      }
      // Text-based preview
      else if (fileType.startsWith('text/') || /\.(txt|md|csv)$/i.test(fileName)) {
        fetch(fileUrl)
          .then(res => res.text())
          .then(text => {
            const blob = new Blob([text], { type: 'text/plain' });
            frameEl.src = URL.createObjectURL(blob);
            frameEl.hidden = false;
          })
          .catch(() => alert('Unable to preview this text file.'));
      }
      // Fallback for unsupported file types
      else {
        window.open(fileUrl, '_blank');
      }

      // Show modal
      const modal = new bootstrap.Modal(document.getElementById('filePreviewModal'));
      modal.show();
    });
  });

  // Preserve sort parameter across uploads
  const uploadForm = document.querySelector('form[action="/upload"]');
  if (uploadForm) {
    const urlParams = new URLSearchParams(window.location.search);
    const currentSort = urlParams.get('sort');
    if (currentSort) {
      const hidden = document.createElement('input');
      hidden.type = 'hidden';
      hidden.name = 'sort';
      hidden.value = currentSort;
      uploadForm.appendChild(hidden);
    }
  }

  // Grid/List toggle
  const gridBtn = document.getElementById("gridViewBtn");
  const listBtn = document.getElementById("listViewBtn");
  const fileContainer = document.getElementById("fileContainer");
  const savedView = localStorage.getItem("viewMode");
  if (savedView === "list") setListView();
  else setGridView();

  gridBtn.addEventListener("click", setGridView);
  listBtn.addEventListener("click", setListView);

  function setGridView() {
    fileContainer.classList.add("grid-view");
    fileContainer.classList.remove("list-view");
    gridBtn.classList.add("active");
    listBtn.classList.remove("active");
    localStorage.setItem("viewMode", "grid");
  }

  function setListView() {
    fileContainer.classList.add("list-view");
    fileContainer.classList.remove("grid-view");
    listBtn.classList.add("active");
    gridBtn.classList.remove("active");
    localStorage.setItem("viewMode", "list");
  }
  // Attach click handler to all edit buttons
  document.querySelectorAll('.file-card .btn-outline-secondary').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.preventDefault(); // prevent default form submission

      const fileCard = btn.closest('.file-card');
      const fileId = fileCard.dataset.id;
      const fileName = fileCard.dataset.filename || fileCard.querySelector('h6').textContent;

      // Set the current file name as default input value
      document.getElementById('renameInput').value = fileName;

      // Update the form action dynamically to point to /files/:id/edit
      const form = document.getElementById('renameFileForm');
      form.action = `/files/${fileId}/edit`;

      // Show the modal
      const renameModal = new bootstrap.Modal(document.getElementById('renameFileModal'));
      renameModal.show();
    });
  });
</script>